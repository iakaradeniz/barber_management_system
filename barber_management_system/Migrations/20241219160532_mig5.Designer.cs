// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using barber_management_system.Data;

#nullable disable

namespace barber_management_system.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241219160532_mig5")]
    partial class mig5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("barber_management_system.Models.Calisan", b =>
                {
                    b.Property<int>("CalisanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CalisanID"));

                    b.Property<string>("CalisanAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CalisanSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CalisanID");

                    b.ToTable("Calisanlar");
                });

            modelBuilder.Entity("barber_management_system.Models.CalisanHizmet", b =>
                {
                    b.Property<int>("CalisanId")
                        .HasColumnType("int");

                    b.Property<int>("HizmetId")
                        .HasColumnType("int");

                    b.HasKey("CalisanId", "HizmetId");

                    b.HasIndex("HizmetId");

                    b.ToTable("CalisanHizmetler");
                });

            modelBuilder.Entity("barber_management_system.Models.CalisanUzmanlik", b =>
                {
                    b.Property<int>("CalisanId")
                        .HasColumnType("int");

                    b.Property<int>("HizmetId")
                        .HasColumnType("int");

                    b.HasKey("CalisanId", "HizmetId");

                    b.HasIndex("HizmetId");

                    b.ToTable("CalisanUzmanliklar");
                });

            modelBuilder.Entity("barber_management_system.Models.CalismaSaati", b =>
                {
                    b.Property<int>("CalismaSaatiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CalismaSaatiID"));

                    b.Property<DateTime>("BaslangicSaati")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BitisSaati")
                        .HasColumnType("datetime2");

                    b.Property<int>("CalisanId")
                        .HasColumnType("int");

                    b.Property<int>("Gun")
                        .HasColumnType("int");

                    b.HasKey("CalismaSaatiID");

                    b.HasIndex("CalisanId");

                    b.ToTable("CalismaSaatleri");
                });

            modelBuilder.Entity("barber_management_system.Models.Hizmet", b =>
                {
                    b.Property<int>("HizmetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HizmetID"));

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HizmetAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HizmetID");

                    b.ToTable("Hizmetler");
                });

            modelBuilder.Entity("barber_management_system.Models.Musteri", b =>
                {
                    b.Property<int>("MusteriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MusteriID"));

                    b.Property<string>("MusteriAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MusteriSoyAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MusteriID");

                    b.ToTable("Musteriler");
                });

            modelBuilder.Entity("barber_management_system.Models.Randevu", b =>
                {
                    b.Property<int>("RandevuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RandevuID"));

                    b.Property<int>("CalisanId")
                        .HasColumnType("int");

                    b.Property<int>("HizmetId")
                        .HasColumnType("int");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.HasKey("RandevuID");

                    b.HasIndex("CalisanId");

                    b.HasIndex("HizmetId");

                    b.HasIndex("MusteriId");

                    b.ToTable("Randevular");
                });

            modelBuilder.Entity("barber_management_system.Models.CalisanHizmet", b =>
                {
                    b.HasOne("barber_management_system.Models.Calisan", "Calisan")
                        .WithMany("calisanhizmetlist")
                        .HasForeignKey("CalisanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("barber_management_system.Models.Hizmet", "Hizmet")
                        .WithMany("calisanhizmetlist")
                        .HasForeignKey("HizmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Calisan");

                    b.Navigation("Hizmet");
                });

            modelBuilder.Entity("barber_management_system.Models.CalisanUzmanlik", b =>
                {
                    b.HasOne("barber_management_system.Models.Calisan", "Calisan")
                        .WithMany("calisanuzmanliklist")
                        .HasForeignKey("CalisanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("barber_management_system.Models.Hizmet", "Hizmet")
                        .WithMany("CalisanUzmanliklist")
                        .HasForeignKey("HizmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Calisan");

                    b.Navigation("Hizmet");
                });

            modelBuilder.Entity("barber_management_system.Models.CalismaSaati", b =>
                {
                    b.HasOne("barber_management_system.Models.Calisan", "Calisan")
                        .WithMany("CalismaSaatleri")
                        .HasForeignKey("CalisanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Calisan");
                });

            modelBuilder.Entity("barber_management_system.Models.Randevu", b =>
                {
                    b.HasOne("barber_management_system.Models.Calisan", "calisan")
                        .WithMany("randevulist")
                        .HasForeignKey("CalisanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("barber_management_system.Models.Hizmet", "hizmet")
                        .WithMany("randevulist")
                        .HasForeignKey("HizmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("barber_management_system.Models.Musteri", "musteri")
                        .WithMany("randevulist")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("calisan");

                    b.Navigation("hizmet");

                    b.Navigation("musteri");
                });

            modelBuilder.Entity("barber_management_system.Models.Calisan", b =>
                {
                    b.Navigation("CalismaSaatleri");

                    b.Navigation("calisanhizmetlist");

                    b.Navigation("calisanuzmanliklist");

                    b.Navigation("randevulist");
                });

            modelBuilder.Entity("barber_management_system.Models.Hizmet", b =>
                {
                    b.Navigation("CalisanUzmanliklist");

                    b.Navigation("calisanhizmetlist");

                    b.Navigation("randevulist");
                });

            modelBuilder.Entity("barber_management_system.Models.Musteri", b =>
                {
                    b.Navigation("randevulist");
                });
#pragma warning restore 612, 618
        }
    }
}
